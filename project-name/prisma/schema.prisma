// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int       @id @default(autoincrement())
  nombre    String
  correo    String    @unique
  contrasena String
  creadoEn  DateTime  @default(now())
  pedidos   Pedido[]
  reviews   Review[] // Relación opuesta con Review
}

model Libro {
  id          Int           @id @default(autoincrement())
  titulo      String
  autor       String
  precio      Float
  stock       Int
  categoria   Categoria     @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  pedidos     Pedido[]      // Relación con Pedido
  PedidoLibro PedidoLibro[] // Relación opuesta con PedidoLibro
  reviews     Review[]      // Relación opuesta con Review
}

model Categoria {
  id     Int     @id @default(autoincrement())
  nombre String  @unique
  libros Libro[]
}

model Pedido {
  id         Int         @id @default(autoincrement())
  total      Float
  creadoEn   DateTime    @default(now())
  usuario    Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId  Int
  libros     Libro[]     // Relación con Libro
  PedidoLibro PedidoLibro[] // Relación con PedidoLibro
}

model PedidoLibro {
  id        Int     @id @default(autoincrement())
  pedidoId  Int
  libroId   Int
  cantidad  Int

  pedido Pedido @relation(fields: [pedidoId], references: [id])
  libro  Libro  @relation(fields: [libroId], references: [id])

  @@unique([pedidoId, libroId])
}

model Review { // Reseña
  id          Int       @id @default(autoincrement())
  contenido   String
  calificacion Int      @default(0)
  libro       Libro     @relation(fields: [libroId], references: [id])
  libroId     Int
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
}
